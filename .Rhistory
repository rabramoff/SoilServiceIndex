tabmax
segments(tabmin[,1], tabmax[,1], lwd = 1.5)
means <- c(23, 28, 19)
names <- c("squirrel", "rabbit", "chipmunk")
standardErrors <- c(1.2, 1.7, 0.9)
plotTop <- max(means+standardErrors*2)
barCenters <- barplot(means, names.arg=names, col="gray", las=1, ylim=c(0,plotTop))
segments(barCenters, means-standardErrors*2, barCenters, means+standardErrors*2, lwd=2)
means
means-standardErrors*2
segments(tab, tabmin, tab, tabmax, lwd = 1.5)
barplot(tab, beside = T, legend=T, legend.text = c("Equal Weight","SOC Weighted 3x"))
segments(tab, tabmin, tab, tabmax, lwd = 1.5)
tab
tabmin
tab
tabmax
tab = rbind(Equalweight[[2]],SOCweighted[[2]], Nminweighted[[2]], Clayweighted[[2]])
barplot(tab, beside = T, col= c(1,"brown","dark green","gray"), legend=T, legend.text = c("Equal Weight","SOC Weighted 3x","Nmin Weighted 3x","Clay Weighted 3x"), ylim=c(0,1))
barplot(tab, beside = T, legend=T, legend.text = c("Equal Weight","SOC Weighted 3x"), ylim=c(0,1))
segments(tab, tabmin, tab, tabmax, lwd = 1.5)
tabmin = rbind(Equalweight[[1]],SOCweighted[[1]])
Equalweight
socs[[1]] = tapply(sf$carbon.1m, sf$LandUseType, FUN=min)
nmins[[1]] = tapply(nf$NminNum, nf$LandUseType, FUN=min, na.rm=T)
clays[[1]] = tapply(sf$clay.1m, sf$LandUseType, FUN=min, na.rm=T)
socs[[2]] = tapply(sf$carbon.1m, sf$LandUseType, FUN=mean)
nmins[[2]] = tapply(nf$NminNum, nf$LandUseType, FUN=mean, na.rm=T)
clays[[2]] = tapply(sf$clay.1m, sf$LandUseType, FUN=mean, na.rm=T)
socs[[3]] = tapply(sf$carbon.1m, sf$LandUseType, FUN=max)
nmins[[3]] = tapply(nf$NminNum, nf$LandUseType, FUN=max, na.rm=T)
clays[[3]] = tapply(sf$clay.1m, sf$LandUseType, FUN=max, na.rm=T)
Equalweight=NULL
SOCweighted=NULL
Clayweighted=NULL
Nminweighted=NULL
socs
SOCnums <- sf[sf$LandUseType==c("forest","grass","undisturbed"),]$carbon.1m
SOCnums <- SOCnums[!is.na(SOCnums)] #remove NAs
NminNums <- as.numeric(as.character(nf[nf$LandUseType==c("forest","grass","undisturbed"),]$Nmin_g_m2_yr_OA_mean))
Nnums <- NminNums[!is.na(NminNums)] #remove NAs
Nnums <- Nnums[Nnums < 400 & Nnums > -200] #remove 2 outliers
Claynums <- sf[sf$LandUseType==c("forest","grass","undisturbed"),]$clay.1m
Claynums <- Claynums[!is.na(Claynums)] #remove NAs
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
rangeSOC <- function(x){(x-min(SOCnums))/(max(SOCnums)-min(SOCnums))}
rangeNmin <- function(x){(x-min(Nnums))/(max(Nnums)-min(Nnums))}
rangeClay <- function(x){(x-min(Claynums))/(max(Claynums)-min(Claynums))}
W.Index <- function(s,n,c,ws,wn,wc){
SOCindex <- rangeSOC(EnterYourSOCValue)
Nindex <- rangeNmin(EnterYourNminValue)
Clayindex <- rangeClay(EnterYourClayValue)
windex <- (SOCindex*ws + Nindex*wn + Clayindex*wc)/3
return(windex)
}
socs <- NULL
nmins <- NULL
clays <- NULL
socs[[1]] = tapply(sf$carbon.1m, sf$LandUseType, FUN=min)
nmins[[1]] = tapply(nf$NminNum, nf$LandUseType, FUN=min, na.rm=T)
clays[[1]] = tapply(sf$clay.1m, sf$LandUseType, FUN=min, na.rm=T)
socs[[2]] = tapply(sf$carbon.1m, sf$LandUseType, FUN=mean)
nmins[[2]] = tapply(nf$NminNum, nf$LandUseType, FUN=mean, na.rm=T)
clays[[2]] = tapply(sf$clay.1m, sf$LandUseType, FUN=mean, na.rm=T)
socs[[3]] = tapply(sf$carbon.1m, sf$LandUseType, FUN=max)
nmins[[3]] = tapply(nf$NminNum, nf$LandUseType, FUN=max, na.rm=T)
clays[[3]] = tapply(sf$clay.1m, sf$LandUseType, FUN=max, na.rm=T)
Equalweight=NULL
SOCweighted=NULL
Clayweighted=NULL
Nminweighted=NULL
for (i in 1:3){
EnterYourSOCValue <- socs[[i]][c("forest","grass","undisturbed")] #kgC/m2 to 1m
EnterYourNminValue <- nmins[[i]][c("forest","grass","undisturbed")] #in g/m2/yr for OA horizons
EnterYourClayValue <- clays[[i]][c("forest","grass","undisturbed")] #in %
SOCWeight <- 1
NminWeight <- 1
ClayWeight <- 1
Equalweight[[i]] <- W.Index(EnterYourSOCValue,EnterYourNminValue,EnterYourClayValue,SOCWeight,NminWeight,ClayWeight)
SOCWeight <- 1.5
NminWeight <- 0.5
ClayWeight <- 0.5
SOCweighted[[i]] <- W.Index(EnterYourSOCValue,EnterYourNminValue,EnterYourClayValue,SOCWeight,NminWeight,ClayWeight)
SOCWeight <- 0.5
NminWeight <- 0.5
ClayWeight <- 1.5
Clayweighted[[i]] <- W.Index(EnterYourSOCValue,EnterYourNminValue,EnterYourClayValue,SOCWeight,NminWeight,ClayWeight)
SOCWeight <- 0.5
NminWeight <- 1.5
ClayWeight <- 0.5
Nminweighted[[i]] <- W.Index(EnterYourSOCValue,EnterYourNminValue,EnterYourClayValue,SOCWeight,NminWeight,ClayWeight)
}
#pdf(file="/Users/rzabramoff/Dropbox (Climate)/External Collaborations/ISCN/figures/mean_index_by_landuse_barplots.pdf")
tab = rbind(Equalweight[[2]],SOCweighted[[2]])
tabmin = rbind(Equalweight[[1]],SOCweighted[[1]])
tabmax = rbind(Equalweight[[3]],SOCweighted[[3]])
barplot(tab, beside = T, legend=T, legend.text = c("Equal Weight","SOC Weighted 3x"), ylim=c(0,1))
segments(tab, tabmin, tab, tabmax, lwd = 1.5)
arrows(tab, tabmin, tab, tabmax, lwd = 1.5, angle = 90, code = 3, length = 0.05)
tabmin
ttabmax
tabmax
barplot(tab, beside = T, col= c(1,"brown","dark green","gray"), legend=T, legend.text = c("Equal Weight","SOC Weighted 3x","Nmin Weighted 3x","Clay Weighted 3x"), ylim=c(-10,10))
barplot(tab, beside = T, legend=T, legend.text = c("Equal Weight","SOC Weighted 3x"), ylim=c(-10,10))
segments(tab, tabmin, tab, tabmax, lwd = 1.5)
arrows(tab, tabmin, tab, tabmax, lwd = 1.5, angle = 90, code = 3, length = 0.05)
tab = rbind(Equalweight[[2]],SOCweighted[[2]])
tabmin = rbind(Equalweight[[1]],SOCweighted[[1]])
tabmax = rbind(Equalweight[[3]],SOCweighted[[3]])
barplot(tab, beside = T, legend=T, legend.text = c("Equal Weight","SOC Weighted 3x"), ylim=c(-10,10))
segments(tab, tabmin, tab, tabmax, lwd = 1.5)
arrows(tab, tabmin, tab, tabmax, lwd = 1.5, angle = 90, code = 3, length = 0.05)
barplot(tab, beside = T, legend=T, legend.text = c("Equal Weight","SOC Weighted 3x"), ylim=c(0,1))
segments(tab, tabmin, tab, tabmax, lwd = 1.5)
arrows(tab, tabmin, tab, tabmax, lwd = 1.5, angle = 90, code = 3, length = 0.05)
tabmax
tabmin
tab
barCenters <- barplot(means, names.arg=names, col="gray", las=1, ylim=c(0,plotTop))
segments(barCenters, means-standardErrors*2, barCenters, means+standardErrors*2, lwd=2)
barCenters
means
tab[[1]]
tabmin[[,1]]
c(tabmin[1,])
c(tabmin[1,],tabmin[2,])
barCenters
barplot(tab, beside = T, legend=T, legend.text = c("Equal Weight","SOC Weighted 3x"), ylim=c(0,1))
segments(tab, c(tabmin[1,],tabmin[2,]), tab, c(tabmax[1,],tabmax[2,]), lwd = 1.5)
library(ggplot2)
#pdf(file="/Users/rzabramoff/Dropbox (Climate)/External Collaborations/ISCN/density_plots.pdf")
#SOC plot
ggplot(sf, aes(carbon.1m, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlab("Soil C (kgC/m2) - 1m") +
theme(text = element_text(size=20))
#N min plot
ggplot(nf, aes(NminNum, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlim(-10,60) +
xlab("N mineralization (g/m2/y) - OA horizon") +
theme(text = element_text(size=20))
#Clay plot
ggplot(sf, aes(clay.1m, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlab("Clay content (%) - 1m") +
theme(text = element_text(size=20))
#dev.off()
sf$carbon.1m
sf$norm.carbon1m <- rangeSOC(sf$carbon.1m)
head(sf)
ggplot(sf, aes(norm.carbon.1m, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlab("Soil C (kgC/m2) - 1m") +
theme(text = element_text(size=20))
sf$norm.carbon1m <- rangeSOC(sf$carbon.1m)
ggplot(sf, aes(norm.carbon.1m, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlab("Soil C (kgC/m2) - 1m") +
theme(text = element_text(size=20))
sf$norm.carbon.1m <- rangeSOC(sf$carbon.1m)
ggplot(sf, aes(norm.carbon.1m, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlab("Soil C (kgC/m2) - 1m") +
theme(text = element_text(size=20))
rangeSOC(sf$carbon.1m)
SOCnums <- sf[sf$LandUseType==c("forest","grass","undisturbed"),]$carbon.1m
SOCnums <- SOCnums[!is.na(SOCnums)] #remove NAs
NminNums <- as.numeric(as.character(nf[nf$LandUseType==c("forest","grass","undisturbed"),]$Nmin_g_m2_yr_OA_mean))
Nnums <- NminNums[!is.na(NminNums)] #remove NAs
Nnums <- Nnums[Nnums < 400 & Nnums > -200] #remove 2 outliers
Claynums <- sf[sf$LandUseType==c("forest","grass","undisturbed"),]$clay.1m
Claynums <- Claynums[!is.na(Claynums)] #remove NAs
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
rangeSOC <- function(x){(x-min(SOCnums))/(max(SOCnums)-min(SOCnums))}
rangeNmin <- function(x){(x-min(Nnums))/(max(Nnums)-min(Nnums))}
rangeClay <- function(x){(x-min(Claynums))/(max(Claynums)-min(Claynums))}
W.Index <- function(s,n,c,ws,wn,wc){
SOCindex <- rangeSOC(EnterYourSOCValue)
Nindex <- rangeNmin(EnterYourNminValue)
Clayindex <- rangeClay(EnterYourClayValue)
windex <- (SOCindex*ws + Nindex*wn + Clayindex*wc)/3
return(windex)
}
ggplot(sf, aes(carbon.1m, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlab("Soil C (kgC/m2) - 1m") +
theme(text = element_text(size=20))
sf$norm.carbon.1m <- rangeSOC(sf$carbon.1m)
ggplot(sf, aes(norm.carbon.1m, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlab("Soil C (normalized) - 1m") +
theme(text = element_text(size=20))
nf$norm.NminNum <- rangeNmin(nf$NminNum)
ggplot(nf, aes(norm.NminNum, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlim(-10,60) +
xlab("N mineralization (g/m2/y) - OA horizon") +
theme(text = element_text(size=20))
nf$norm.NminNum <- rangeNmin(nf$NminNum)
ggplot(nf, aes(norm.NminNum, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
#xlim(-10,60) +
xlab("N mineralization (g/m2/y) - OA horizon") +
theme(text = element_text(size=20))
nf$norm.NminNum <- rangeNmin(nf$NminNum)
ggplot(nf, aes(norm.NminNum, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
#xlim(-10,60) +
xlab("N mineralization (g/m2/y) - OA horizon") +
theme(text = element_text(size=20))
sf$norm.clay.1m <- rangeSOC(sf$clay.1m)
ggplot(sf, aes(clay.1m, fill=LandUseType)) +
))
sf$norm.clay.1m <- rangeSOC(sf$clay.1m)
ggplot(sf, aes(norm.clay.1m, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlab("Clay content (%) - 1m") +
theme(text = element_text(size=20))
#dev.off()
sf$norm.clay.1m <- rangeSOC(sf$clay.1m)
ggplot(sf, aes(norm.clay.1m, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlab("Clay content (normalized) - 1m") +
theme(text = element_text(size=20))
SOCnums <- sf[sf$LandUseType==c("forest","grass","undisturbed"),]$carbon.1m
SOCnums <- SOCnums[!is.na(SOCnums)] #remove NAs
hist(SOCnums)
max(SOCnums)
range(SOCnums)
SOCnums <- sf[sf$LandUseType==c("forest","grass","undisturbed"),]$carbon.1m
SOCnums <- SOCnums[!is.na(SOCnums)] #remove NAs
NminNums <- as.numeric(as.character(nf[nf$LandUseType==c("forest","grass","undisturbed"),]$Nmin_g_m2_yr_OA_mean))
Nnums <- NminNums[!is.na(NminNums)] #remove NAs
Nnums <- Nnums[Nnums < 400 & Nnums > -200] #remove 2 outliers
##Redo index function for three land types only
SOCnums <- sf[sf$LandUseType==c("forest","grass","undisturbed"),]$carbon.1m
SOCnums <- SOCnums[!is.na(SOCnums)] #remove NAs
NminNums <- as.numeric(as.character(nf[nf$LandUseType==c("forest","grass","undisturbed"),]$Nmin_g_m2_yr_OA_mean))
Nnums <- NminNums[!is.na(NminNums)] #remove NAs
#Nnums <- Nnums[Nnums < 400 & Nnums > -200] #remove 2 outliers
Claynums <- sf[sf$LandUseType==c("forest","grass","undisturbed"),]$clay.1m
Claynums <- Claynums[!is.na(Claynums)] #remove NAs
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
rangeSOC <- function(x){(x-min(SOCnums))/(max(SOCnums)-min(SOCnums))}
rangeNmin <- function(x){(x-min(Nnums))/(max(Nnums)-min(Nnums))}
rangeClay <- function(x){(x-min(Claynums))/(max(Claynums)-min(Claynums))}
W.Index <- function(s,n,c,ws,wn,wc){
SOCindex <- rangeSOC(EnterYourSOCValue)
Nindex <- rangeNmin(EnterYourNminValue)
Clayindex <- rangeClay(EnterYourClayValue)
windex <- (SOCindex*ws + Nindex*wn + Clayindex*wc)/3
return(windex)
}
socs <- NULL
nmins <- NULL
clays <- NULL
socs[[1]] = tapply(sf$carbon.1m, sf$LandUseType, FUN=min)
nmins[[1]] = tapply(nf$NminNum, nf$LandUseType, FUN=min, na.rm=T)
clays[[1]] = tapply(sf$clay.1m, sf$LandUseType, FUN=min, na.rm=T)
socs[[2]] = tapply(sf$carbon.1m, sf$LandUseType, FUN=mean)
nmins[[2]] = tapply(nf$NminNum, nf$LandUseType, FUN=mean, na.rm=T)
clays[[2]] = tapply(sf$clay.1m, sf$LandUseType, FUN=mean, na.rm=T)
socs[[3]] = tapply(sf$carbon.1m, sf$LandUseType, FUN=max)
nmins[[3]] = tapply(nf$NminNum, nf$LandUseType, FUN=max, na.rm=T)
clays[[3]] = tapply(sf$clay.1m, sf$LandUseType, FUN=max, na.rm=T)
Equalweight=NULL
SOCweighted=NULL
Clayweighted=NULL
Nminweighted=NULL
for (i in 1:3){
EnterYourSOCValue <- socs[[i]][c("forest","grass","undisturbed")] #kgC/m2 to 1m
EnterYourNminValue <- nmins[[i]][c("forest","grass","undisturbed")] #in g/m2/yr for OA horizons
EnterYourClayValue <- clays[[i]][c("forest","grass","undisturbed")] #in %
SOCWeight <- 1
NminWeight <- 1
ClayWeight <- 1
Equalweight[[i]] <- W.Index(EnterYourSOCValue,EnterYourNminValue,EnterYourClayValue,SOCWeight,NminWeight,ClayWeight)
SOCWeight <- 1.5
NminWeight <- 0.5
ClayWeight <- 0.5
SOCweighted[[i]] <- W.Index(EnterYourSOCValue,EnterYourNminValue,EnterYourClayValue,SOCWeight,NminWeight,ClayWeight)
SOCWeight <- 0.5
NminWeight <- 0.5
ClayWeight <- 1.5
Clayweighted[[i]] <- W.Index(EnterYourSOCValue,EnterYourNminValue,EnterYourClayValue,SOCWeight,NminWeight,ClayWeight)
SOCWeight <- 0.5
NminWeight <- 1.5
ClayWeight <- 0.5
Nminweighted[[i]] <- W.Index(EnterYourSOCValue,EnterYourNminValue,EnterYourClayValue,SOCWeight,NminWeight,ClayWeight)
}
#pdf(file="/Users/rzabramoff/Dropbox (Climate)/External Collaborations/ISCN/figures/mean_index_by_landuse_barplots.pdf")
tab = rbind(Equalweight[[2]],SOCweighted[[2]])
tabmin = rbind(Equalweight[[1]],SOCweighted[[1]])
tabmax = rbind(Equalweight[[3]],SOCweighted[[3]])
barplot(tab, beside = T, legend=T, legend.text = c("Equal Weight","SOC Weighted 3x"), ylim=c(0,1))
segments(tab, c(tabmin[1,],tabmin[2,]), tab, c(tabmax[1,],tabmax[2,]), lwd = 1.5) #!
arrows(tab, tabmin, tab, tabmax, lwd = 1.5, angle = 90, code = 3, length = 0.05) #!
tab = rbind(Equalweight[[2]],SOCweighted[[2]], Nminweighted[[2]], Clayweighted[[2]])
barplot(tab, beside = T, col= c(1,"brown","dark green","gray"), legend=T, legend.text = c("Equal Weight","SOC Weighted 3x","Nmin Weighted 3x","Clay Weighted 3x"), ylim=c(0,1))
#dev.off()
#Example
means <- c(23, 28, 19)
names <- c("squirrel", "rabbit", "chipmunk")
standardErrors <- c(1.2, 1.7, 0.9)
plotTop <- max(means+standardErrors*2)
barCenters <- barplot(means, names.arg=names, col="gray", las=1, ylim=c(0,plotTop))
segments(barCenters, means-standardErrors*2, barCenters, means+standardErrors*2, lwd=2)
#pdf(file="/Users/rzabramoff/Dropbox (Climate)/External Collaborations/ISCN/density_plots.pdf")
#SOC plot
sf$norm.carbon.1m <- rangeSOC(sf$carbon.1m)
ggplot(sf, aes(norm.carbon.1m, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlab("Soil C (normalized) - 1m") +
theme(text = element_text(size=20))
#N min plot
nf$norm.NminNum <- rangeNmin(nf$NminNum)
ggplot(nf, aes(norm.NminNum, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
#xlim(-10,60) +
xlab("N mineralization (normalized) - OA horizon") +
theme(text = element_text(size=20))
#Clay plot
sf$norm.clay.1m <- rangeSOC(sf$clay.1m)
ggplot(sf, aes(norm.clay.1m, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlab("Clay content (normalized) - 1m") +
theme(text = element_text(size=20))
#dev.off()
##Redo index function for three land types only
SOCnums <- sf[sf$LandUseType==c("forest","grass","undisturbed"),]$carbon.1m
SOCnums <- SOCnums[!is.na(SOCnums)] #remove NAs
NminNums <- as.numeric(as.character(nf[nf$LandUseType==c("forest","grass","undisturbed"),]$Nmin_g_m2_yr_OA_mean))
Nnums <- NminNums[!is.na(NminNums)] #remove NAs
Nnums <- Nnums[Nnums < 400 & Nnums > -200] #remove 2 outliers
Claynums <- sf[sf$LandUseType==c("forest","grass","undisturbed"),]$clay.1m
Claynums <- Claynums[!is.na(Claynums)] #remove NAs
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
rangeSOC <- function(x){(x-min(SOCnums))/(max(SOCnums)-min(SOCnums))}
rangeNmin <- function(x){(x-min(Nnums))/(max(Nnums)-min(Nnums))}
rangeClay <- function(x){(x-min(Claynums))/(max(Claynums)-min(Claynums))}
W.Index <- function(s,n,c,ws,wn,wc){
SOCindex <- rangeSOC(EnterYourSOCValue)
Nindex <- rangeNmin(EnterYourNminValue)
Clayindex <- rangeClay(EnterYourClayValue)
windex <- (SOCindex*ws + Nindex*wn + Clayindex*wc)/3
return(windex)
}
socs <- NULL
nmins <- NULL
clays <- NULL
socs[[1]] = tapply(sf$carbon.1m, sf$LandUseType, FUN=min)
nmins[[1]] = tapply(nf$NminNum, nf$LandUseType, FUN=min, na.rm=T)
clays[[1]] = tapply(sf$clay.1m, sf$LandUseType, FUN=min, na.rm=T)
socs[[2]] = tapply(sf$carbon.1m, sf$LandUseType, FUN=mean)
nmins[[2]] = tapply(nf$NminNum, nf$LandUseType, FUN=mean, na.rm=T)
clays[[2]] = tapply(sf$clay.1m, sf$LandUseType, FUN=mean, na.rm=T)
socs[[3]] = tapply(sf$carbon.1m, sf$LandUseType, FUN=max)
nmins[[3]] = tapply(nf$NminNum, nf$LandUseType, FUN=max, na.rm=T)
clays[[3]] = tapply(sf$clay.1m, sf$LandUseType, FUN=max, na.rm=T)
Equalweight=NULL
SOCweighted=NULL
Clayweighted=NULL
Nminweighted=NULL
for (i in 1:3){
EnterYourSOCValue <- socs[[i]][c("forest","grass","undisturbed")] #kgC/m2 to 1m
EnterYourNminValue <- nmins[[i]][c("forest","grass","undisturbed")] #in g/m2/yr for OA horizons
EnterYourClayValue <- clays[[i]][c("forest","grass","undisturbed")] #in %
SOCWeight <- 1
NminWeight <- 1
ClayWeight <- 1
Equalweight[[i]] <- W.Index(EnterYourSOCValue,EnterYourNminValue,EnterYourClayValue,SOCWeight,NminWeight,ClayWeight)
SOCWeight <- 1.5
NminWeight <- 0.5
ClayWeight <- 0.5
SOCweighted[[i]] <- W.Index(EnterYourSOCValue,EnterYourNminValue,EnterYourClayValue,SOCWeight,NminWeight,ClayWeight)
SOCWeight <- 0.5
NminWeight <- 0.5
ClayWeight <- 1.5
Clayweighted[[i]] <- W.Index(EnterYourSOCValue,EnterYourNminValue,EnterYourClayValue,SOCWeight,NminWeight,ClayWeight)
SOCWeight <- 0.5
NminWeight <- 1.5
ClayWeight <- 0.5
Nminweighted[[i]] <- W.Index(EnterYourSOCValue,EnterYourNminValue,EnterYourClayValue,SOCWeight,NminWeight,ClayWeight)
}
#pdf(file="/Users/rzabramoff/Dropbox (Climate)/External Collaborations/ISCN/figures/mean_index_by_landuse_barplots.pdf")
tab = rbind(Equalweight[[2]],SOCweighted[[2]])
tabmin = rbind(Equalweight[[1]],SOCweighted[[1]])
tabmax = rbind(Equalweight[[3]],SOCweighted[[3]])
barplot(tab, beside = T, legend=T, legend.text = c("Equal Weight","SOC Weighted 3x"), ylim=c(0,1))
segments(tab, c(tabmin[1,],tabmin[2,]), tab, c(tabmax[1,],tabmax[2,]), lwd = 1.5) #!
arrows(tab, tabmin, tab, tabmax, lwd = 1.5, angle = 90, code = 3, length = 0.05) #!
tab = rbind(Equalweight[[2]],SOCweighted[[2]], Nminweighted[[2]], Clayweighted[[2]])
barplot(tab, beside = T, col= c(1,"brown","dark green","gray"), legend=T, legend.text = c("Equal Weight","SOC Weighted 3x","Nmin Weighted 3x","Clay Weighted 3x"), ylim=c(0,1))
#dev.off()
#Example
means <- c(23, 28, 19)
names <- c("squirrel", "rabbit", "chipmunk")
standardErrors <- c(1.2, 1.7, 0.9)
plotTop <- max(means+standardErrors*2)
barCenters <- barplot(means, names.arg=names, col="gray", las=1, ylim=c(0,plotTop))
segments(barCenters, means-standardErrors*2, barCenters, means+standardErrors*2, lwd=2)
sf$SOCNums <- SOCNums
nf$Nnums <- Nnums
sf$Claynums <- Claynums
sf
sfs <- sf[sf$LandUseType==c("forest","grass","undisturbed"),]
sfa
sfs
head(sfs)
sfs <- sf[sf$LandUseType==c("forest","grass","undisturbed"),]
str(sfs)
str(sf)
sfs <- sfs[!is.na(sfs$soil.carbon)] #remove NAs
sfs <- sf[sf$LandUseType==c("forest","grass","undisturbed"),]
nfs <- as.numeric(as.character(nf[nf$LandUseType==c("forest","grass","undisturbed"),]$Nmin_g_m2_yr_OA_mean))
nfs
nfs <- as.numeric(as.character(nf[nf$LandUseType==c("forest","grass","undisturbed"),]))
nfs <- nfs[nfs$Nmin_g_m2_yr_OA_mean < 400 & nfs$Nmin_g_m2_yr_OA_mean > -200] #remove 2 outliers
head(nfs)
nfs <- as.numeric(as.character(nf[nf$LandUseType==c("forest","grass","undisturbed"),]))
nfs <- nf[nf$LandUseType==c("forest","grass","undisturbed"),]
nfs <- nfs[nfs$Nmin_g_m2_yr_OA_mean < 400 & nfs$Nmin_g_m2_yr_OA_mean > -200] #remove 2 outliers
nfs$Nmin_g_m2_yr_OA_mean <- as.numeric(as.character(nfs$Nmin_g_m2_yr_OA_mean))
nfs <- nfs[nfs$Nmin_g_m2_yr_OA_mean < 400 & nfs$Nmin_g_m2_yr_OA_mean > -200] #remove 2 outliers
nfs <- nfs[nfs$Nmin_g_m2_yr_OA_mean < 400 & nfs$Nmin_g_m2_yr_OA_mean > -200,] #remove 2 outliers
str(nfs)
Claynums <- sf[sf$LandUseType==c("forest","grass","undisturbed"),]$clay.1m
#pdf(file="/Users/rzabramoff/Dropbox (Climate)/External Collaborations/ISCN/density_plots.pdf")
sfs <- sf[sf$LandUseType==c("forest","grass","undisturbed"),]
nfs <- nf[nf$LandUseType==c("forest","grass","undisturbed"),]
nfs$Nmin_g_m2_yr_OA_mean <- as.numeric(as.character(nfs$Nmin_g_m2_yr_OA_mean))
nfs <- nfs[nfs$Nmin_g_m2_yr_OA_mean < 400 & nfs$Nmin_g_m2_yr_OA_mean > -200,] #remove 2 outliers
Claynums <- sf[sf$LandUseType==c("forest","grass","undisturbed"),]$clay.1m
#SOC plot
sfs$norm.carbon.1m <- rangeSOC(sfs$carbon.1m)
ggplot(sfs, aes(norm.carbon.1m, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlab("Soil C (normalized) - 1m") +
theme(text = element_text(size=20))
#N min plot
nfs$norm.NminNum <- rangeNmin(nfs$Nmin_g_m2_yr_OA_mean)
ggplot(nfs, aes(norm.NminNum, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
#xlim(-10,60) +
xlab("N mineralization (normalized) - OA horizon") +
theme(text = element_text(size=20))
#Clay plot
sfs$norm.clay.1m <- rangeSOC(sfs$clay.1m)
ggplot(sfs, aes(norm.clay.1m, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlab("Clay content (normalized) - 1m") +
theme(text = element_text(size=20))
#dev.off()
library(ggplot2)
#pdf(file="/Users/rzabramoff/Dropbox (Climate)/External Collaborations/ISCN/density_plots.pdf")
#SOC plot
ggplot(sf, aes(carbon.1m, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlab("Soil C (kgC/m2) - 1m") +
theme(text = element_text(size=20))
#N min plot
ggplot(nf, aes(NminNum, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlim(-10,60) +
xlab("N mineralization (g/m2/y) - OA horizon") +
theme(text = element_text(size=20))
#Clay plot
ggplot(sf, aes(clay.1m, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlab("Clay content (%) - 1m") +
theme(text = element_text(size=20))
#dev.off()
nfs <- nfs[nfs$Nmin_g_m2_yr_OA_mean < 400 & nfs$Nmin_g_m2_yr_OA_mean > -200,] #remove 2 outliers
nfs$norm.NminNum <- rangeNmin(nfs$Nmin_g_m2_yr_OA_mean)
ggplot(nfs, aes(norm.NminNum, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
#xlim(-10,60) +
xlab("N mineralization (normalized) - OA horizon") +
theme(text = element_text(size=20))
nfs
str(nfs)
nfs[nfs$Nmin_g_m2_yr_OA_mean < 400 & nfs$Nmin_g_m2_yr_OA_mean > -200,]
hist(nfs$norm.NminNum)
#pdf(file="/Users/rzabramoff/Dropbox (Climate)/External Collaborations/ISCN/density_plots.pdf")
sfs <- sf[sf$LandUseType==c("forest","grass","undisturbed"),]
nfs <- nf[nf$LandUseType==c("forest","grass","undisturbed"),]
nfs$Nmin_g_m2_yr_OA_mean <- as.numeric(as.character(nfs$Nmin_g_m2_yr_OA_mean))
nfs <- nfs[nfs$Nmin_g_m2_yr_OA_mean < 50 & nfs$Nmin_g_m2_yr_OA_mean > -200,] #remove 2 outliers
Claynums <- sf[sf$LandUseType==c("forest","grass","undisturbed"),]$clay.1m
#SOC plot
sfs$norm.carbon.1m <- rangeSOC(sfs$carbon.1m)
ggplot(sfs, aes(norm.carbon.1m, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlab("Soil C (normalized) - 1m") +
theme(text = element_text(size=20))
#N min plot
nfs$norm.NminNum <- rangeNmin(nfs$Nmin_g_m2_yr_OA_mean)
ggplot(nfs, aes(norm.NminNum, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
#xlim(-10,60) +
xlab("N mineralization (normalized) - OA horizon") +
theme(text = element_text(size=20))
#Clay plot
sfs$norm.clay.1m <- rangeSOC(sfs$clay.1m)
ggplot(sfs, aes(norm.clay.1m, fill=LandUseType)) +
stat_density(position="identity", alpha=0.7) +
xlab("Clay content (normalized) - 1m") +
theme(text = element_text(size=20))
#dev.off()
hist(nfs$norm.NminNum)nfs$Nmin_g_m2_yr_OA_mean
nfs$Nmin_g_m2_yr_OA_mean
